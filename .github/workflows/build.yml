name: build
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      forcePublish:
        description: When true, the PowerShell module will be published to specified PowerShell Repository irrespective of its version
        required: true
        default: false
        type: boolean
      psRepository:
        description: The PowerShell repository used when publishing the module
        required: true
        default: github
        type: string

permissions:
  checks: write  # enable test result annotations
  contents: write  # enable creating releases
  issues: read
  packages: write  # enable publishing packages
  pull-requests: write  # enable test result annotations

jobs:
  build:
    name: Run Build
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.run_build.outputs.semver }}
      major: ${{ steps.run_build.outputs.major }}
      majorMinor: ${{ steps.run_build.outputs.majorMinor }}
      preReleaseTag: ${{ steps.run_build.outputs.preReleaseTag }}

    steps:
    - uses: endjin/Endjin.RecommendedPractices.GitHubActions/actions/prepare-env-vars-and-secrets@main
      id: prepareEnvVarsAndSecrets
      with:
        environmentVariablesYaml: |
          {}
        secretsYaml: |
          BUILDVAR_PowerShellGalleryApiKey: ${{ secrets.PSGALLERY_APIKEY }}
        secretsEncryptionKey: ${{ secrets.SHARED_WORKFLOW_KEY }}

    - uses: endjin/Endjin.RecommendedPractices.GitHubActions/actions/run-build-process@main
      id: run_build
      with:
        netSdkVersion: '8.x'
        # workflow_dispatch inputs are always strings, the type property is just for the UI
        forcePublish: ${{ github.event.inputs.forcePublish == 'true' }}
        buildEnv: ${{ steps.prepareEnvVarsAndSecrets.outputs.environmentVariablesYamlBase64 }}
        buildSecrets: ${{ steps.prepareEnvVarsAndSecrets.outputs.secretsYamlBase64 }}
        secretsEncryptionKey: ${{ secrets.SHARED_WORKFLOW_KEY }}
        token: ${{ secrets.GITHUB_TOKEN }}